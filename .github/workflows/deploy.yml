name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build with Gradle
        run: |
          chmod +x gradlew
          ./gradlew build -x test  # 테스트 제외하고 빌드

      - name: Build Docker Image
        run: |
          docker build -t nayoungg/trendithon .

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Push Docker Image to Docker Hub
        run: |
          docker tag nayoungg/trendithon nayoungg/trendithon:latest
          docker push nayoungg/trendithon:latest

      - name: Set up SSH
        run: |
          echo "${{ secrets.EC2_PRIVATE_KEY }}" > ec2_key.pem
          chmod 600 ec2_key.pem

      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i ec2_key.pem ubuntu@${{ secrets.EC2_HOST }} << 'EOF'
            # Docker 로그인
            docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" -p "${{ secrets.DOCKER_HUB_PASSWORD }}"

            # 기존 컨테이너 삭제
            if [ "\$(docker ps -aq -f name=trendithon)" ]; then
              echo "기존 컨테이너 중지 및 삭제..."
              docker stop trendithon
              docker rm trendithon
            else
              echo "trendithon 컨테이너가 존재하지 않음. 삭제 스킵!"
            fi

            # 기존 이미지 삭제
            if [ "\$(docker images -q nayoungg/trendithon)" ]; then
              echo "기존 Docker 이미지 삭제..."
              docker rmi nayoungg/trendithon
            else
              echo "nayoungg/trendithon 이미지가 존재하지 않음. 삭제 스킵!"
            fi

            # 최신 이미지 풀받기
            docker pull nayoungg/trendithon:latest

            # 컨테이너 실행
            docker run -d --name trendithon -p 8080:8080 nayoungg/trendithon
          EOF